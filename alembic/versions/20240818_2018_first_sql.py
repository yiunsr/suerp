"""first sql

Revision ID: 898ac2d9e9df
Revises: 
Create Date: 2024-08-18 20:18:40.546703

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '898ac2d9e9df'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()   # noqa
    raw_sql = """CREATE OR REPLACE FUNCTION now_ets() RETURNS integer AS $$ 
        select cast(extract(epoch from current_timestamp) as integer) - 3786912000
    $$ LANGUAGE SQL;"""
    conn.execute(sa.text(raw_sql))

    raw_sql = """CREATE OR REPLACE FUNCTION ts2ets(in ts timestamptz) RETURNS integer AS $$ 
        select cast(extract(epoch from ts) as integer) - 3786912000
    $$ LANGUAGE SQL;"""
    conn.execute(sa.text(raw_sql))

    raw_sql = """CREATE OR REPLACE FUNCTION ets2ts(in ts integer) RETURNS timestamptz AS $$ 
        select to_timestamp ((ts + 3786912000)::integer)
    $$ LANGUAGE SQL;"""
    conn.execute(sa.text(raw_sql))
    
    op.create_table('app_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('name', sa.VARCHAR(length=16), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.VARCHAR(length=128), server_default=sa.text("''"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cate_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=False),
    sa.Column('table_meta_id', sa.SmallInteger(), nullable=False),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('db_key', sa.CHAR(length=3), server_default=sa.text("''"), nullable=False),
    sa.Column('api_key', sa.CHAR(length=3), server_default=sa.text("''"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('col_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_meta_id', sa.SmallInteger(), nullable=False),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('col_meta', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('data_type', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('code', sa.CHAR(length=16), server_default=sa.text("''"), nullable=False),
    sa.Column('name_lang_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('options_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('default_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'null'::jsonb"), nullable=False),
    sa.Column('html_type', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('html_pattern', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('html_detail', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.Column('owner_group_id', sa.Integer(), nullable=True),
    sa.Column('owner_person_id', sa.Integer(), nullable=True),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('category_data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('category_tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('address_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('phone_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('email_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('messenger_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('url_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('category_data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('category_tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('key', sa.String(length=8), server_default=sa.text("''"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('last_name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('display', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('address_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('phone_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('email_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('messenger_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('url_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('category_data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('category_tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('created_ets', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('testmode', sa.String(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('role_jsonb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('display', sa.String(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.Column('owner_group_id', sa.Integer(), nullable=True),
    sa.Column('owner_person_id', sa.Integer(), nullable=True),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('category_data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('category_tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('table_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('code', sa.CHAR(length=16), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.CHAR(length=128), server_default=sa.text("''"), nullable=False),
    sa.Column('name_lang_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ugroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('detail', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=True),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('created_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_user_id', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ugroup_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ugroup_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('created_ets', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_role', sa.String(length=1), server_default=sa.text("'N'"), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('first_name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('last_name', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('display', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('nickname', sa.String(length=64), server_default=sa.text("''"), nullable=False),
    sa.Column('avatar', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('api_key', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('api_key_last_ets', sa.Integer(), nullable=False),
    sa.Column('hash_password', sa.String(length=256), server_default=sa.text("''"), nullable=False),
    sa.Column('password_last_ets', sa.Integer(), nullable=False),
    sa.Column('last_join_ets', sa.Integer(), nullable=True),
    sa.Column('create_ets', sa.Integer(), nullable=False),
    sa.Column('update_ets', sa.Integer(), nullable=False),
    sa.Column('app_meta_id', sa.SmallInteger(), nullable=True),
    sa.Column('testmode', sa.CHAR(length=1), server_default=sa.text("''"), nullable=False),
    sa.Column('status', sa.CHAR(length=1), server_default=sa.text("'A'"), nullable=False),
    sa.Column('ref_id0', sa.Integer(), nullable=True),
    sa.Column('ref_id1', sa.Integer(), nullable=True),
    sa.Column('ref_id2', sa.Integer(), nullable=True),
    sa.Column('ref_id3', sa.Integer(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('category_data_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('category_tags_jb', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('created_ets', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_ugroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ugroup_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    # direct query
    # conn = op.get_bind()   # noqa
    # raw_sql = """   """
    # conn.execute(sa.text(raw_sql))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_ugroup')
    op.drop_table('user_permission')
    op.drop_table('user')
    op.drop_table('ugroup_permission')
    op.drop_table('ugroup')
    op.drop_table('table_meta')
    op.drop_table('product')
    op.drop_table('person_organization')
    op.drop_table('person')
    op.drop_table('permission')
    op.drop_table('organization')
    op.drop_table('deal')
    op.drop_table('col_meta')
    op.drop_table('cate_meta')
    op.drop_table('app_meta')
    # ### end Alembic commands ###

    # direct query
    # conn = op.get_bind()   # noqa
    # raw_sql = """   """"
    # conn.execute(sa.text(raw_sql))
